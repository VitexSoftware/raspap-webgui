#!/bin/sh -e

if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] ; then

fi

if [ -f /usr/bin/xdg-desktop-menu ]; then
    xdg-desktop-menu install --novendor /usr/share/applications/raspap-webgui.desktop > /dev/null || true
fi


if [ "$1" = "configure" ] ; then
    chown -R www-data:www-data /etc/raspap
    chown -R www-data:www-data /usr/share/raspap-webgui
fi


avahi_install() {
        if [ -d /etc/avahi/services/ -a ! -e /etc/avahi/services/raspap-webgui.service -a ! -L /etc/avahi/services/raspap-webgui.service ] ; then
                ln -s ../../raspap-webgui/raspap-webgui.service /etc/avahi/services/
        fi
}

desktop_install() {
        if [ -d /usr/share/applications/ -a ! -e /usr/share/applications/raspap-webgui.desktop -a ! -L /usr/share/applications/raspap-webgui.desktop ] ; then
                ln -s /etc/raspap-webgui/raspap-webgui.desktop /usr/share/applications/
        fi
}

lighttpd_install() {
        if [ ! -f /etc/lighttpd/conf-available/50-raspap-webgui.conf ] ; then
                if which lighty-enable-mod >/dev/null 2>&1 ; then
                        ln -s ../../raspap-webgui/lighttpd.conf /etc/lighttpd/conf-available/50-raspap-webgui.conf
                        # We also need auth to protect setup.php
                        lighty-enable-mod raspap-webgui auth fastcgi fastcgi-php
                        avahi_install
                        desktop_install
                else
                        echo "Lighttpd not installed, skipping"
                fi
        fi
}

apache_install() {
        mkdir -p /etc/apache2/conf-available
        ln -sf ../../raspap-webgui/apache.conf /etc/apache2/conf-available/raspap-webgui.conf

        COMMON_STATE=$(dpkg-query -f '${Status}' -W 'apache2.2-common' 2>/dev/null | awk '{print $3}' || true)

        if [ -e /usr/share/apache2/apache2-maintscript-helper ] ; then
                . /usr/share/apache2/apache2-maintscript-helper
                apache2_invoke enconf raspap-webgui
        elif [ "$COMMON_STATE" = "installed" ] || [ "$COMMON_STATE" = "unpacked" ] ; then
                [ -d /etc/apache2/conf.d/ ] && [ ! -L /etc/apache2/conf.d/raspap-webgui.conf ] && ln -s ../conf-available/raspap-webgui.conf /etc/apache2/conf.d/raspap-webgui.conf
        fi

        avahi_install
        desktop_install
}

. /usr/share/debconf/confmodule

webroot_dir=/usr/share/raspap-webgui

    mv -f $webroot_dir/config/default_hostapd /etc/default/hostapd || install_error "Unable to move hostapd defaults file"
    mv -f $webroot_dir/config/hostapd.conf /etc/hostapd/hostapd.conf || install_error "Unable to move hostapd configuration file"
    mv -f $webroot_dir/config/dnsmasq.conf /etc/dnsmasq.conf || install_error "Unable to move dnsmasq configuration file"
    mv -f $webroot_dir/config/dhcpcd.conf /etc/dhcpcd.conf || install_error "Unable to move dhcpcd configuration file"

    # Generate required lines for Rasp AP to place into rc.local file.
    # #RASPAP is for removal script
    lines=(
    'echo 1 > \/proc\/sys\/net\/ipv4\/ip_forward #RASPAP'
    'iptables -t nat -A POSTROUTING -j MASQUERADE #RASPAP'
    
    )
....
    for line in "${lines[@]}"; do
        if grep "$line" /etc/rc.local > /dev/null; then
            echo "$line: Line already added"
        else
            sudo sed -i "s/^exit 0$/$line\nexit 0/" /etc/rc.local
            echo "Adding line $line"
        fi
    done

        # Configure Apache
        db_get phpmyadmin/reconfigure-webserver
                        
        webservers="$RET"
                  
        for webserver in $webservers; do
                webserver=${webserver%,}
                if [ "$webserver" = "lighttpd" ] ; then
                        lighttpd_install
                else
                        # Need to pass params for apache2-maintscript-helper
                        apache_install $@
                fi
                # Reload webserver in any case, configuration might have changed
                # Redirection of 3 is needed because Debconf uses it and it might
                # be inherited by webserver. See bug #446324.
        if [ -f /etc/init.d/$webserver ] ; then
            if which invoke-rc.d > /dev/null ; then
                if invoke-rc.d $webserver status > /dev/null 2>&1 ; then
                    invoke-rc.d $webserver reload 3>/dev/null || true
                fi
            else
                if /etc/init.d/$webserver status > /dev/null 2>&1 ; then
                    /etc/init.d/$webserver reload 3>/dev/null || true
                fi
            fi
        fi
        done

